@Library('Jenkins-Shared-Library') _

pipeline {
    agent any

    environment {
        ANSIBLE_VERSION = 'Default_Ansible'   // Ansible installation name
    }

    parameters {
        string(name: 'PLAYBOOK', defaultValue: 'Playbooks/ping_check.yml', description: 'Ping Check Playbook')
        string(name: 'PLAYBOOK_Docker_Install', defaultValue: 'Playbooks/Install_docker.yml', description: 'Docker Installation Playbook')
        string(name: 'PLAYBOOK_Minikube_Install', defaultValue: 'Playbooks/Install_minikube&kubectl.yml', description: 'Docker Installation Playbook')
        string(name: 'INVENTORY_FILE1', defaultValue: 'Inventory/inventory.ini', description: 'Path to the first inventory file')
        string(name: 'INVENTORY_FILE2', defaultValue: 'Inventory/inventory_2.ini', description: 'Path to the second inventory file')
        credentials(name: 'CREDENTIALS_ID_1', description: 'Credentials ID for Machine 1', defaultValue: 'Ansible_Target_Machine_M1')
        credentials(name: 'CREDENTIALS_ID_2', description: 'Credentials ID for Machine 2', defaultValue: 'Ansible_Target_Machine_M2')
    }

    stages {
        stage('Environment Check') {
            steps {
                echo 'Checking if Ansible is installed...'
                sh 'ansible --version'
            }
        }
        stage('Test: Ping Machines') {
            steps {
                script {
                    echo "Start Testing Ping on Machines"
                    dir('Ansible') {
                        // Machine 1
                        ansiblePlaybook(
                            credentialsId: "${params.CREDENTIALS_ID_1}",
                            installation: "${env.ANSIBLE_VERSION}",
                            inventory: "${params.INVENTORY_FILE1}",
                            playbook: "${params.PLAYBOOK}"
                        )
                        // Machine 2
                        ansiblePlaybook(
                            credentialsId: "${params.CREDENTIALS_ID_2}",
                            installation: "${env.ANSIBLE_VERSION}",
                            inventory: "${params.INVENTORY_FILE2}",
                            playbook: "${params.PLAYBOOK}"
                        )
                    }
                }
            }
        }
        stage('Install Minikube & kubernetes on Machine 1') {
            steps {
                script {
                    echo "Installing Minikube on Machine 1"
                    dir('Ansible') {
                        ansiblePlaybook(
                            credentialsId: "${params.CREDENTIALS_ID_1}",
                            installation: "${env.ANSIBLE_VERSION}",
                            inventory: "${params.INVENTORY_FILE1}",
                            playbook: "${params.PLAYBOOK_Minikube_Install}"
                        )
                    }
                    echo "Minikube Installed on Machine 1"
                    }
                }
            }
        
        
        stage('Install Docker on Machine 2') {
            steps {
                script {
                    echo "Installing Docker on Machine 2"
                    dir('Ansible') {
                        ansiblePlaybook(
                            credentialsId: "${params.CREDENTIALS_ID_2}",
                            installation: "${env.ANSIBLE_VERSION}",
                            inventory: "${params.INVENTORY_FILE2}",
                            playbook: "${params.PLAYBOOK_Docker_Install}"
                        )
                        }
                    echo "Docker Installed on Machine 1"
                    }
                }
            }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up workspace...'
            deleteDir() // Ensures workspace cleanup
        }
        success {
            notifyGmail(to: 'm.labibebidallah@nu.edu.eg',isSuccess: true)   
        }
        failure {
            notifyGmail(to: 'm.labibebidallah@nu.edu.eg',isSuccess: false)
        }
    }
}