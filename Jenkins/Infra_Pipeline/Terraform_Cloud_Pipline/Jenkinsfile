@Library('Jenkins-Shared-Library') _

pipeline {
    agent any

    environment {
        // AWS region for the Terraform operations
        AWS_REGION = 'us-east-2'
    }

    stages {
        stage('Checkout SCM stage') {
            steps {
                // Checkout SCM stage
                script {
                    checkout scm   
                }
            }
        }

        stage('IaS Scanning'){
            steps{
                // Scanning IAS using Snyk
                dir('Terraform'){
                    script{
                        snykLogin('Snyk_Token_ID')
                        snykTestIas()
                    }
                }
            }
        }

        stage('Initialize Terraform') {
            steps {
                dir('Terraform'){
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-jenkins-credentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    terraform init
                    '''
                }
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('Terraform'){
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-jenkins-credentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    terraform validate
                    '''
                }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('Terraform'){
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-jenkins-credentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    terraform plan
                    '''
                }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('Terraform'){
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-jenkins-credentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    terraform ${action} -auto-approve
                    '''
                }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            deleteDir() // Ensures workspace cleanup
        }
        success {
            notifyGmail(to: 'm.labibebidallah@nu.edu.eg', isSuccess: true)
        }
        failure {
            notifyGmail(to: 'm.labibebidallah@nu.edu.eg', isSuccess: false)
        }
    }
}